apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.gyh.filecollect"
        minSdkVersion 23
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    buildToolsVersion = '28.0.3'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'com.yanzhenjie.recyclerview:x:1.3.2'
    implementation 'com.afollestad.material-dialogs:core:0.9.6.0'
    implementation 'com.google.android.material:material:1.1.0-beta01'
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
    implementation 'androidx.preference:preference:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}

/** * 修改release包的apk文件名和路径 * Studio3.0 */
android.applicationVariants.all { variant ->
    if (variant.buildType.name == "debug") {
        println(variant.getPackageApplicationProvider().get().outputDirectory)
        variant.getPackageApplicationProvider().get().outputDirectory = new File(project.rootDir.absolutePath + "/img")
        println(new File(project.rootDir.absolutePath + "/img"))
    }

    variant.getPackageApplicationProvider().get().outputScope.apkDatas.forEach { apkData ->
        apkData.outputFileName = ((project.name != "app") ? project.name : rootProject.name) + "-" +
                variant.buildType.name +
                ".apk"
    }
}
